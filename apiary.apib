FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# sessions_service

The Sessions Service provides facilities to create a session, tie a 
session to a specific user, authenticate users (via a separate 
Authentication Service), and combine users to a single session. 

## Root [/]

### Retrieve the entry points [GET]

+ Response 200 (application/json)

        {
            "logins_url":   "/sessions/:id/logins",
            "oauths_url":   "/sessions/:id/oauths",
            "session_url":  "/sessions/:id",
            "sessions_url": "/sessions"
        }


## Sessions [/sessions]

### Create a new Session [POST]

Request a new session ID and user ID pair. 

This action returns a 200 status code and a JSON body. 

+ Response 200 (application/json)
    + Attributes
        - session (Session)

        
## Session [/sessions/{session_id}]

+ Parameters
    + session_id: `12345` (number, required) - ID of the Session
    
### Get an existing Session [GET] 

Find all information associated with a session ID. 

This returns a 200 status code and a JSON body. 

+ Response 200 (application/json)
    + Attributes
        - session (Session)


## Login [/sessions/{session_id}/logins]

+ Parameter
    + session_id: `12345` (number, required)

### Create a new Login [POST]

+ Request (application/json)
    + Attributes
        - login (Login)
        
+ Response 201 (application/json)
    + Attributes
        - session (Session)

### Authenticate an existing Login [GET]

+ Request (application/json)
    + Attributes
        - login (Login)
        
+ Response 200 (application/json)
    + Attributes
        - session (Session)


# Data Structures

## Credential (object)

- user_id: `12345` (number, required) - The unique ID of the user. 
- type (enum[string], required)
    - guest - A new visitor.
    - facebook - A user created via Facebook.
    - twitter - A user created via Twitter. 
    - google - A user created via Google. 
    - login - A user created via the site directly. 


## Login (object)

- email: `joe@example.org` (string, required) - An email address.
- password: `password` (string, required) - A password. 


## OAuth (object)

- type (enum[string], required)
    - facebook
    - twitter
    - google

  
## Session (object)

- session_id: `12345` (number, required) - The session ID. 
- credentials (array[Credential], required)